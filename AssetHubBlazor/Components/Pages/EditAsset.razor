@page "/edit/{Id:int}"
@rendermode InteractiveServer
@using AssetHubBlazor.Models
@using AssetHubBlazor.Services
@inject AssetService AssetService
@inject NavigationManager NavigationManager

<div class="edit-asset-page-container">
    <div class="edit-asset-header mb-4">
        <h2 class="page-title">Edit Asset</h2>
        <p class="page-desc">Update the details of the selected asset below.</p>
    </div>
    @if (Asset == null)
    {
        <div class="card p-4 mb-4">Loading...</div>
    }
    else
    {
        <div class="card p-4">
            <EditForm Model="@EditedAsset" OnValidSubmit="@HandleValidSubmit" FormName="EditAssetForm">
                <DataAnnotationsValidator />
                <ValidationSummary Class="text-danger mb-3" />
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="assetName" class="form-label">Name *</label>
                        <InputText id="assetName" class="form-control" @bind-Value="EditedAsset.Name" />
                        <ValidationMessage For="@(() => EditedAsset.Name)" Class="text-danger small" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="assetType" class="form-label">Type *</label>
                        <InputSelect id="assetType" class="form-control" @bind-Value="EditedAsset.Type">
                            <option value="">-- Select Type --</option>
                            @foreach (var type in Enum.GetValues<AssetType>())
                            {
                                <option value="@((int)type)">@type</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => EditedAsset.Type)" Class="text-danger small" />
                    </div>
                </div>

                <div class="mb-3">
                    <label for="notes" class="form-label">Notes</label>
                    <InputTextArea id="notes" class="form-control" @bind-Value="EditedAsset.Notes" rows="3" />
                </div>
                <div class="mt-4 d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                </div>
            </EditForm>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Asset? Asset { get; set; }
    private Asset? EditedAsset = new();

    protected override async Task OnInitializedAsync()
    {
        Asset = await AssetService.GetByIdAsync(Id);
        EditedAsset = Asset;

    }

    private async Task HandleValidSubmit()
    {
        await AssetService.UpdateAsync(EditedAsset!);
        NavigationManager.NavigateTo("/find");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/find");
    }
}