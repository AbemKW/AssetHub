@page "/find"
@rendermode InteractiveServer
@using AssetHubBlazor.Models
@using AssetHubBlazor.Services
@inject AssetService AssetService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="dashboard-title-section">
    <h1 class="dashboard-title">FIND ASSET BY ID</h1>
    <p class="dashboard-subtitle">Search for an asset by entering its ID below.</p>
</div>
<div class="dashboard-bottom-row">
    <div class="dashboard-table-section" style="max-width:700px;margin:auto;">
        <div class="card p-4">
            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="assetId" class="form-label">Asset ID</label>
                    <InputNumber id="assetId" class="form-control" @bind-Value="Id" placeholder="Enter Asset ID" />
                </div>
                <div class="col-md-6 d-flex align-items-end">
                    <button class="btn btn-gradient w-100" @onclick="Find">Search</button>
                </div>
            </div>
            @if (ButtonClicked)
            {
                <div class="alert alert-info mt-3">Searching for asset with ID: @Id</div>
            }
            @if (FoundAsset == null && HasSearched)
            {
                <div class="alert alert-warning mt-3">No asset found with ID: @Id</div>
            }
            else if (FoundAsset != null)
            {
                <table class="table table-hover mt-3">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Status</th>
                            <th>Purchase Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@FoundAsset.Name</td>
                            <td>@FoundAsset.Type</td>
                            <td>
                                <span class="badge @(FoundAsset.Status == Status.InUse ? "bg-success" : "bg-secondary")">
                                    @FoundAsset.Status
                                </span>
                            </td>
                            <td>@FoundAsset.PurchaseDate.ToString("MMM dd, yyyy")</td>
                        </tr>
                    </tbody>
                </table>
                <div class="mt-3 d-flex gap-2 justify-content-end">
                    <a href="/view/@FoundAsset.Id" class="btn btn-info">View Details</a>
                    <a href="/edit/@FoundAsset.Id" class="btn btn-primary">Edit</a>
                    <button class="btn btn-danger" @onclick="ConfirmDelete">Delete Asset</button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Asset? FoundAsset { get; set; }
    private bool HasSearched { get; set; } = false;
    private bool ButtonClicked { get; set; } = false;

    private async Task Find()
    {
        ButtonClicked = true;
        HasSearched = true;
        FoundAsset = await AssetService.GetByIdAsync(Id);
    }
    private async Task ConfirmDelete()
    {
        bool confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this asset?");
        if (confirm)
        {
            await AssetService.RemoveAsync(FoundAsset);
        }
    }
}